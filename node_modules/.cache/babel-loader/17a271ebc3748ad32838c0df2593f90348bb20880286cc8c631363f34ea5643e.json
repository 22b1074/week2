{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Documents/Web Development 2024/week2/my-notes/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport AddNote from './components/AddNote';\nimport Note from './components/Note';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];\n    setNotes(savedNotes);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n  const addNote = note => {\n    const newNote = {\n      ...note,\n      id: Date.now()\n    };\n    setNotes([...notes, newNote]);\n  };\n  const deleteNote = id => {\n    const filteredNotes = notes.filter(note => note.id !== id);\n    setNotes(filteredNotes);\n  };\n  const editNote = (id, updateNote) => {\n    const updatedNotes = notes.map(note => note.id === id ? {\n      ...note,\n      ...updateNote\n    } : note);\n    setNotes(updatedNotes);\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? 'bg-dark text-white' : '',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MY Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: toggleDarkMode,\n          children: darkMode ? 'Light Mode' : 'Dark Mode'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddNote, {\n        onAdd: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          onDelete: deleteNote,\n          onEdit: editNote\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ImkA/wiVDMTCeAe8B+2xMlvKj+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","AddNote","Note","jsxDEV","_jsxDEV","App","_s","notes","setNotes","darkMode","setDarkMode","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","note","newNote","id","Date","now","deleteNote","filteredNotes","filter","editNote","updateNote","updatedNotes","map","toggleDarkMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAdd","onDelete","onEdit","_c","$RefreshReg$"],"sources":["/home/ubuntu/Documents/Web Development 2024/week2/my-notes/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport AddNote from './components/AddNote';\nimport Note from './components/Note';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const[darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];\n    setNotes(savedNotes);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (note) => {\n    const newNote = { ...note, id:Date.now() };\n    setNotes([...notes, newNote]);\n  };\n\n  const deleteNote = (id) => {\n    const filteredNotes = notes.filter(note => note.id !== id);\n    setNotes(filteredNotes);\n  };\n\n  const editNote = (id, updateNote) => {\n    const updatedNotes = notes.map(note =>\n      note.id === id ? { ...note, ...updateNote } : note\n    );\n    setNotes(updatedNotes);\n  }\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={darkMode ? 'bg-dark text-white' : ''}>\n      <div className='container py-3'>\n        <div className='d-flex justify-content-between align-items-center mb-3'>\n          <h1>MY Notes</h1>\n          <button className='btn btn-secondary' onClick={toggleDarkMode}>\n            {darkMode ? 'Light Mode' : 'Dark Mode'}\n          </button>\n        </div>\n        <AddNote onAdd={addNote} />\n        <div>\n          {notes.map(note => (\n            <Note key={note.id} note={note} onDelete={deleteNote} onEdit={editNote} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}